import{_ as i,c as s,a as e,o as t}from"./app-LjtWi_AK.js";const n={};function d(l,a){return t(),s("div",null,[...a[0]||(a[0]=[e('<h1 id="markdown生成带左侧目录的html" tabindex="-1"><a class="header-anchor" href="#markdown生成带左侧目录的html"><span>markdown生成带左侧目录的Html</span></a></h1><h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景"><span>背景</span></a></h2><p>近日工作中要开发一个用户帮助文档的页面，文档内容由其他同事使用markdown编写，然后使用iframe嵌套。为了页面清晰展示所有希望在左侧生成目录。</p><h2 id="实现方式" tabindex="-1"><a class="header-anchor" href="#实现方式"><span>实现方式</span></a></h2><ol><li><p>在markdown文件顶部引入下面的css</p><blockquote><p>由于我的编辑器配置 markdownlint 会自动处理链接地址，所以使用<code>markdownlint-disable-next-line</code>禁止校验</p></blockquote><div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-md"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">&lt;!-- markdownlint-disable-next-line --&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">`</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">@import &quot;https://haogeshuohuanihaohaoting.github.io/static/mdCreateMenu.js&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">`</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://haogeshuohuanihaohaoting.github.io/static/mdCreateMenu.js&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>使用 VSCode中的<code>Markdown Preview Enhanced</code>插件导出成 html</p></li></ol><h2 id="使用markdown编辑器的预览模式实现" tabindex="-1"><a class="header-anchor" href="#使用markdown编辑器的预览模式实现"><span>使用markdown编辑器的预览模式实现</span></a></h2><p>该方案可随便找一个markdown编辑器组件实现，之前在其他项目中使用过<code>wlt-mavon-editor</code>组件。可是使用该组件的预览模式将<code>navigation</code>设置为<code>true</code>即刻。如对其目录样式不满意可自行调整样式。</p>',7)])])}const r=i(n,[["render",d]]),o=JSON.parse('{"path":"/manual/markdown_directory.html","title":"markdown生成带左侧目录的Html","lang":"zh-CN","frontmatter":{"date":"2023-06-09T00:00:00.000Z","category":"开发者手册","tag":["markdown"]},"git":{"createdTime":1759144434000,"updatedTime":1759144434000},"readingTime":{"minutes":0.81,"words":242},"filePathRelative":"manual/markdown_directory.md"}');export{r as comp,o as data};
